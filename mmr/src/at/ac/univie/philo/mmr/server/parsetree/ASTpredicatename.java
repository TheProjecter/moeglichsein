/* Generated By:JJTree: Do not edit this line. ASTpredicatename.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package at.ac.univie.philo.mmr.server.parsetree;

public
class ASTpredicatename extends SimpleNode {
  
	Integer arity = null;
	Integer index = 0;
	String name = null;
	
	public ASTpredicatename(int id) {
    super(id);
  }

  public ASTpredicatename(crflang p, int id) {
    super(p, id);
  }

  public Integer getArity() {
	  return arity;
  }
  
  public Integer getIndex() {
	  return index;
  }
  
  public void setArity(String stringArity) {
//		try {
			int intArity = Integer.parseInt(stringArity);
			this.arity = intArity;
//		} catch (NumberFormatException e) {
//			System.err.print("Could not parse Arity of Variable");
//		}
  }
  
  public void setIndex(String stringIndex) {
		try {
			int intIndex = Integer.parseInt(stringIndex);
			this.index = intIndex;
		} catch (NumberFormatException e) {
			System.err.print("Could not parse Index of Variable");
		}
  }
  
  
  /** Accept the visitor. **/
  public Object jjtAccept(crflangVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }

public void setName(String image) {
	this.name = image;
}

public String getName() {
	return name;
}

}
/* JavaCC - OriginalChecksum=7353aef72de5d7739835b35273625fd1 (do not edit this line) */
