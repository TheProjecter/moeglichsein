/* Generated By:JJTree: Do not edit this line. ASTfunction.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package at.ac.univie.philo.mmr.server.parsetree;

import java.util.ArrayList;

public
class ASTfunction extends SimpleNode {
	
  ASTfunctionname fn;
  ArrayList<SimpleNode> terms;
	
  public ASTfunction(int id) {
    super(id);
    terms = new ArrayList<SimpleNode>();
  }

  public ASTfunction(crflang p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  public Object jjtAccept(crflangVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }

public void setFunction(ASTfunctionname functionname) {
	this.fn = functionname;
	
}

public Integer getArity() {
	return fn.getArity();
}

public Integer getIndex() {
	return fn.getIndex();
}

public String getName() {
	return fn.getName();
}

public ArrayList<SimpleNode> getTerms() {
	return terms;
}

public void addTerm(SimpleNode aterm) {
	terms.add(aterm);
}

}
/* JavaCC - OriginalChecksum=6fe080d111bec72f9a8b05c334a820f3 (do not edit this line) */
